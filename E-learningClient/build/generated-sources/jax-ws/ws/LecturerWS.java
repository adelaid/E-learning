
package ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LecturerWS", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LecturerWS {


    /**
     * 
     * @param firstName
     * @param lastName
     * @param password
     * @param city
     * @param streetNo
     * @param street
     * @param email
     * @param username
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addLecturer", targetNamespace = "http://ws/", className = "ws.AddLecturer")
    @Action(input = "http://ws/LecturerWS/addLecturer")
    public void addLecturer(
        @WebParam(name = "firstName", targetNamespace = "")
        String firstName,
        @WebParam(name = "lastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "street", targetNamespace = "")
        String street,
        @WebParam(name = "streetNo", targetNamespace = "")
        String streetNo);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Lecturer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllLecturers", targetNamespace = "http://ws/", className = "ws.GetAllLecturers")
    @ResponseWrapper(localName = "getAllLecturersResponse", targetNamespace = "http://ws/", className = "ws.GetAllLecturersResponse")
    @Action(input = "http://ws/LecturerWS/getAllLecturersRequest", output = "http://ws/LecturerWS/getAllLecturersResponse")
    public List<Lecturer> getAllLecturers();

    /**
     * 
     * @param username
     * @return
     *     returns ws.Lecturer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLecturer", targetNamespace = "http://ws/", className = "ws.GetLecturer")
    @ResponseWrapper(localName = "getLecturerResponse", targetNamespace = "http://ws/", className = "ws.GetLecturerResponse")
    @Action(input = "http://ws/LecturerWS/getLecturerRequest", output = "http://ws/LecturerWS/getLecturerResponse")
    public Lecturer getLecturer(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "userExists", targetNamespace = "http://ws/", className = "ws.UserExists")
    @ResponseWrapper(localName = "userExistsResponse", targetNamespace = "http://ws/", className = "ws.UserExistsResponse")
    @Action(input = "http://ws/LecturerWS/userExistsRequest", output = "http://ws/LecturerWS/userExistsResponse")
    public boolean userExists(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param lecturerId
     * @return
     *     returns java.util.List<ws.Course>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLecturerCourses", targetNamespace = "http://ws/", className = "ws.GetLecturerCourses")
    @ResponseWrapper(localName = "getLecturerCoursesResponse", targetNamespace = "http://ws/", className = "ws.GetLecturerCoursesResponse")
    @Action(input = "http://ws/LecturerWS/getLecturerCoursesRequest", output = "http://ws/LecturerWS/getLecturerCoursesResponse")
    public List<Course> getLecturerCourses(
        @WebParam(name = "lecturerId", targetNamespace = "")
        Long lecturerId);

}
